"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3400],{1792:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>c,contentTitle:()=>l,default:()=>a,frontMatter:()=>d,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"basic-components/text","title":"text","description":"Properties","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/basic-components/text.mdx","sourceDirName":"basic-components","slug":"/basic-components/text","permalink":"/docs/basic-components/text","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/basic-components/text.mdx","tags":[],"version":"current","frontMatter":{"title":"text"},"sidebar":"tutorialSidebar","previous":{"title":"Input","permalink":"/docs/basic-components/input"},"next":{"title":"user-profile","permalink":"/docs/feature-components/user-profile"}}');var r=t(4848),s=t(8453);const d={title:"text"},l=void 0,c={},o=[{value:"Properties",id:"properties",level:2},{value:"Property description",id:"property-description",level:2},{value:"Usage examples",id:"usage-examples",level:2},{value:"1. Rendering different types of text",id:"1-rendering-different-types-of-text",level:3},{value:"2. Rendering headings of different levels",id:"2-rendering-headings-of-different-levels",level:3},{value:"3. Use color styles",id:"3-use-color-styles",level:3},{value:"4. Inline text",id:"4-inline-text",level:3},{value:"5. Enable expressive styles",id:"5-enable-expressive-styles",level:3},{value:"6. ARIA attributes",id:"6-aria-attributes",level:3}];function x(e){const i={code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Property"}),(0,r.jsx)(i.th,{children:"Attribute"}),(0,r.jsx)(i.th,{children:"Description"}),(0,r.jsx)(i.th,{children:"Type"}),(0,r.jsx)(i.th,{children:"Default"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"color"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"color"})}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:'"error" | "helper" | "inverse" | "on-color" | "primary" | "secondary" | "tertiary"'})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"'primary'"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"configAria"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"config-aria"})}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"any"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"{}"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"expressive"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"expressive"})}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"boolean"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"false"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"headingLevel"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"heading-level"})}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"1 | 2 | 3 | 4 | 5 | 6"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"undefined"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"headingSize"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"heading-size"})}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"1 | 2 | 3 | 4 | 5 | 6 | 7"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"undefined"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"inline"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"inline"})}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"boolean"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"false"})})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"type"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"type"})}),(0,r.jsx)(i.td,{}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:'"body" | "body-compact" | "body-emphasis" | "body-large" | "code" | "fluid-heading" | "heading" | "helper-text" | "label" | "legal"'})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"'body'"})})]})]})]}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsxs)(i.p,{children:["The ",(0,r.jsx)(i.code,{children:"air-text"})," component is used to render different types of text, such as headings, paragraphs, and explanatory text. It supports a variety of style and color options."]}),"\n",(0,r.jsx)(i.h2,{id:"property-description",children:"Property description"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.code,{children:"type"})}),": specifies the type of text. The following options are supported:","\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"'code'"}),": displays code text"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"'helper-text'"}),": auxiliary text"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"'label'"}),": label text"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"'legal'"}),": legal text"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"'heading'"}),": heading text"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"'body'"}),": normal body text"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"'body-compact'"}),": compact body text"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"'body-large'"}),": large body text"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"'body-emphasis'"}),": emphasised body text"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"'fluid-heading'"}),": fluid heading text"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.code,{children:"expressive"})}),": whether to enable the expressive text style (default: ",(0,r.jsx)(i.code,{children:"false"}),")."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.code,{children:"headingSize"})}),": the size of the heading, a number between 1 and 7, which affects the display size of the text of the ",(0,r.jsx)(i.code,{children:"heading"})," type."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.code,{children:"headingLevel"})}),": the level of the heading, a number between 1 and 6. Determines the use of the ",(0,r.jsx)(i.code,{children:"<h1>"})," to ",(0,r.jsx)(i.code,{children:"<h6>"})," tags."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.code,{children:"inline"})}),": whether to render the text as an inline element (default: ",(0,r.jsx)(i.code,{children:"false"}),")."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.code,{children:"color"})}),": the text color, with the following options:","\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"'primary'"}),": primary color"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"'secondary'"}),": secondary color"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"'tertiary'"}),": tertiary color"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"'helper'"}),": helper color"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"'error'"}),": error color"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"'on-color'"}),": text color is custom color"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"'inverse'"}),": inverse color"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:(0,r.jsx)(i.code,{children:"configAria"})}),": configures ARIA attributes, allowing you to attach ARIA attributes to text elements"]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"usage-examples",children:"Usage examples"}),"\n",(0,r.jsx)(i.h3,{id:"1-rendering-different-types-of-text",children:"1. Rendering different types of text"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-jex",metastring:"live",live:!0,children:"<>\n<air-text type='heading' level='1'>Main Heading</air-text>\n<air-text type='body'>This is a simple paragraph.</air-text>\n<air-text type='helper-text'>Helper text to guide the user.</air-text>\n<air-text type='code'>const x = 10;</air-text>\n</>\n"})}),"\n",(0,r.jsx)(i.h3,{id:"2-rendering-headings-of-different-levels",children:"2. Rendering headings of different levels"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-jex",metastring:"live",live:!0,children:"<>\n<air-text type='heading' headingSize='1'>Heading 1</air-text>\n<air-text type='heading' headingSize='2'>Heading 2</air-text>\n<air-text type='heading' headingSize='3'>Heading 3</air-text>\n<air-text type='heading' headingSize='4'>Heading 4</air-text>\n<air-text type='heading' headingSize='5'>Heading 5</air-text>\n<air-text type='heading' headingSize='6'>Heading 6</air-text>\n</>\n"})}),"\n",(0,r.jsx)(i.h3,{id:"3-use-color-styles",children:"3. Use color styles"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-jex",metastring:"live",live:!0,children:"<>\n<air-text type='heading' level='1'>Main Heading</air-text>\n<air-text type='body'>This is a simple paragraph. </air-text>\n<air-text type='helper-text'>Helper text to guide the user. </air-text>\n<air-text type='code'>const x = 10;</air-text>\n</>\n"})}),"\n",(0,r.jsx)(i.h3,{id:"4-inline-text",children:"4. Inline text"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-jex",metastring:"live",live:!0,children:"<air-text type='body' inline={true}>This text is inline. </air-text>\n"})}),"\n",(0,r.jsx)(i.h3,{id:"5-enable-expressive-styles",children:"5. Enable expressive styles"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-jex",metastring:"live",live:!0,children:"<air-text type='body' expressive={true}>This is expressive text.</air-text>\n"})}),"\n",(0,r.jsx)(i.h3,{id:"6-aria-attributes",children:"6. ARIA attributes"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-jex",metastring:"live",live:!0,children:"<air-text type='body' configAria={{'aria-label': 'Descriptive text'}}>This text has ARIA attributes.</air-text>\n"})})]})}function a(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(x,{...e})}):x(e)}},8453:(e,i,t)=>{t.d(i,{R:()=>d,x:()=>l});var n=t(6540);const r={},s=n.createContext(r);function d(e){const i=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),n.createElement(s.Provider,{value:i},e.children)}}}]);